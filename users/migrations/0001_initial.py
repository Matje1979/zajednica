# Generated by Django 2.2.7 on 2022-01-06 23:07

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import location_field.models.plain
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer.Letters, digits and @/./ /-/_ only.', max_length=150, unique=True, validators=[users.models.MyValidator()], verbose_name='username')),
                ('is_director', models.BooleanField(default=False)),
                ('Grad', models.CharField(max_length=100)),
                ('Opština', models.CharField(max_length=25)),
                ('Ulica_i_broj', models.CharField(max_length=100)),
                ('Broj_stana', models.CharField(max_length=25)),
                ('upravnik_id', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Grad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Gradovi',
            },
        ),
        migrations.CreateModel(
            name='Opština',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('Grad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opštine', to='users.Grad')),
            ],
            options={
                'verbose_name_plural': 'Opštine',
            },
        ),
        migrations.CreateModel(
            name='Temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secr', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ulaz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ulica_i_broj', models.CharField(max_length=100)),
                ('website', models.URLField(default='https://www.b92.net/')),
                ('papir_box_full', models.BooleanField(default=False)),
                ('cep_box_full', models.BooleanField(default=False)),
                ('cep_box_filled_date', models.FloatField(blank=True, null=True)),
                ('city', models.CharField(default='Belgrade', max_length=255)),
                ('location', location_field.models.plain.PlainLocationField(blank=True, max_length=63, null=True)),
                ('Grad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ulazi', to='users.Grad')),
                ('Opština', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ulazi', to='users.Opština')),
            ],
            options={
                'verbose_name_plural': 'Ulazi',
            },
        ),
        migrations.CreateModel(
            name='Upravnik',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vrsta', models.CharField(choices=[('Upravnik - domaće lice', 'Upravnik - domaće lice'), ('Profesionalni upravnik - domaće lice', 'Profesionalni upravnik - domaće lice')], default='Upravnik - domaće lice', max_length=50)),
                ('firma', models.CharField(blank=True, max_length=150, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('ulaz', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='upravnik', to='users.Ulaz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Upravnici',
            },
        ),
        migrations.CreateModel(
            name='TempPapir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='temp_papir_photos')),
                ('city', models.CharField(default='Belgrade', max_length=60)),
                ('ulica_i_broj', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('location', location_field.models.plain.PlainLocationField(default='44.79688084502436,20.477120876312256', max_length=63)),
                ('ulaz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Ulaz', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TempCepovi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='temp_papir_photos')),
                ('city', models.CharField(default='Belgrade', max_length=60)),
                ('location', location_field.models.plain.PlainLocationField(default='44.79688084502436,20.477120876312256', max_length=63)),
                ('cep_box_filled_date', models.FloatField(blank=True, null=True)),
                ('ulaz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Ulaz', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Temp2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secr', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('Grad', models.CharField(choices=[('BG', 'Beograd'), ('NS', 'Novi Sad')], max_length=50, null=True)),
                ('Opština', models.CharField(max_length=50, null=True)),
                ('Broj_stana', models.IntegerField(null=True)),
                ('ulaz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Ulaz')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('o_sebi', models.TextField(blank=True, null=True)),
                ('oceni_upravnika', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('prosecna_ocena', models.FloatField(blank=True, null=True)),
                ('broj_ocenjivaca', models.IntegerField(blank=True, null=True)),
                ('is_director', models.BooleanField(default=False)),
                ('radi_za', models.CharField(blank=True, max_length=100, null=True)),
                ('vrsta_upravnika', models.CharField(blank=True, max_length=100, null=True)),
                ('is_organisation', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KomentarUpravnika',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customuser', to=settings.AUTH_USER_MODEL)),
                ('upravnik', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upravnik_ulaza', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Komentari upravnika',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='Ulaz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Ulaz'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='liked_posts',
            field=models.ManyToManyField(related_name='user_likes', to='home.Post'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
